// <auto-generated />
using System;
using GerenciadorTarefas.Infraestrutura;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GerenciadorTarefas.Migrations
{
    [DbContext(typeof(ContextoBanco))]
    partial class ContextoBancoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.18");

            modelBuilder.Entity("GerenciadorTarefas.Dominio.Modelos.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int?>("AutorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Conteudo")
                        .HasColumnType("TEXT")
                        .HasColumnName("conteudo");

                    b.Property<int?>("TarefaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.HasIndex("TarefaId");

                    b.ToTable("comentarios", (string)null);
                });

            modelBuilder.Entity("GerenciadorTarefas.Dominio.Modelos.HistoricoModificacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int?>("autor_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comentarios")
                        .HasColumnType("TEXT")
                        .HasColumnName("comentarios");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_alteracao");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT")
                        .HasColumnName("descricao");

                    b.Property<string>("DescricaoAlteracao")
                        .HasColumnType("TEXT")
                        .HasColumnName("descricao_alteracao");

                    b.Property<int>("IdTarefaModificada")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_tarefa");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER")
                        .HasColumnName("status");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT")
                        .HasColumnName("titulo");

                    b.Property<DateTime>("Vencimento")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_vencimento");

                    b.HasKey("Id");

                    b.HasIndex("autor_id");

                    b.ToTable("historico_modificacoes", (string)null);
                });

            modelBuilder.Entity("GerenciadorTarefas.Dominio.Modelos.Projeto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT")
                        .HasColumnName("nome");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("projetos", (string)null);
                });

            modelBuilder.Entity("GerenciadorTarefas.Dominio.Modelos.Tarefa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT")
                        .HasColumnName("descricao");

                    b.Property<int>("Prioridade")
                        .HasColumnType("INTEGER")
                        .HasColumnName("prioridade");

                    b.Property<int?>("ProjetoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER")
                        .HasColumnName("status");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT")
                        .HasColumnName("titulo");

                    b.Property<DateTime>("Vencimento")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_vencimento");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoId");

                    b.ToTable("tarefas", (string)null);
                });

            modelBuilder.Entity("GerenciadorTarefas.Dominio.Modelos.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("Funcao")
                        .HasColumnType("INTEGER")
                        .HasColumnName("funcao");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT")
                        .HasColumnName("nome");

                    b.Property<string>("Token")
                        .HasColumnType("TEXT")
                        .HasColumnName("token");

                    b.HasKey("Id");

                    b.ToTable("usuarios", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Funcao = 0,
                            Nome = "Gerente",
                            Token = "GRT01"
                        },
                        new
                        {
                            Id = 2,
                            Funcao = 1,
                            Nome = "Funcionário",
                            Token = "FUNC01"
                        });
                });

            modelBuilder.Entity("GerenciadorTarefas.Dominio.Modelos.Comentario", b =>
                {
                    b.HasOne("GerenciadorTarefas.Dominio.Modelos.Usuario", "Autor")
                        .WithMany("Comentarios")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GerenciadorTarefas.Dominio.Modelos.Tarefa", "Tarefa")
                        .WithMany("Comentarios")
                        .HasForeignKey("TarefaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Autor");

                    b.Navigation("Tarefa");
                });

            modelBuilder.Entity("GerenciadorTarefas.Dominio.Modelos.HistoricoModificacao", b =>
                {
                    b.HasOne("GerenciadorTarefas.Dominio.Modelos.Usuario", "AutorModificacao")
                        .WithMany("HistoricoModificacoes")
                        .HasForeignKey("autor_id");

                    b.Navigation("AutorModificacao");
                });

            modelBuilder.Entity("GerenciadorTarefas.Dominio.Modelos.Projeto", b =>
                {
                    b.HasOne("GerenciadorTarefas.Dominio.Modelos.Usuario", "Usuario")
                        .WithMany("Projetos")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GerenciadorTarefas.Dominio.Modelos.Tarefa", b =>
                {
                    b.HasOne("GerenciadorTarefas.Dominio.Modelos.Projeto", "Projeto")
                        .WithMany("Tarefas")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("GerenciadorTarefas.Dominio.Modelos.Projeto", b =>
                {
                    b.Navigation("Tarefas");
                });

            modelBuilder.Entity("GerenciadorTarefas.Dominio.Modelos.Tarefa", b =>
                {
                    b.Navigation("Comentarios");
                });

            modelBuilder.Entity("GerenciadorTarefas.Dominio.Modelos.Usuario", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("HistoricoModificacoes");

                    b.Navigation("Projetos");
                });
#pragma warning restore 612, 618
        }
    }
}
